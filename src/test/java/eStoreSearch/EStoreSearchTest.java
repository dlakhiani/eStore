/*
 * This Java source file was generated by the Gradle 'init' task.
 * Test file for EStoreSearch Class
 * @author Dhruv Lakhiani
 */
package eStoreSearch;

import java.util.ArrayList;
import java.util.HashMap;
import org.junit.Test;
import static org.junit.Assert.*;

public class EStoreSearchTest {
    @Test public void testEStoreSearch() {
      EStoreSearch eStoreSearch = new EStoreSearch();
      assertNotNull(eStoreSearch);
    }

    @Test public void testAddProduct() {
      try {
        EStoreSearch eStoreSearch = new EStoreSearch();
        ArrayList<Product> p = new ArrayList<Product>();
        Book testBook = new Book();
        testBook.setProductID(100100);
        testBook.setDesc("Java Programming");
        testBook.setPrice(10.5f);
        testBook.setYear("2020");
        testBook.setAuthors("Dhruv");
        testBook.setPublisher("Lakhiani");
        p = eStoreSearch.addProduct(p, testBook);
        Electronics testE = new Electronics();
        testE.setProductID(100100);
        testE.setDesc("Java Programming");
        testE.setPrice(10.5f);
        testE.setYear("2020");
        testE.setMaker("Lakhiani");
        p = eStoreSearch.addProduct(p, testE);
        assertEquals(2, p.size());
      } catch (Exception e) {
        System.out.println(e.getMessage());
      }
    }

    @Test public void testCompareID() {
      try {
        EStoreSearch eStoreSearch = new EStoreSearch();
        int id = 100100;
        ArrayList<Product> p = new ArrayList<Product>();
        Book testBook = new Book();
        testBook.setProductID(100100);
        testBook.setDesc("Java Programming");
        testBook.setPrice(10.5f);
        testBook.setYear("2020");
        testBook.setAuthors("Dhruv");
        testBook.setPublisher("Lakhiani");
        p = eStoreSearch.addProduct(p, testBook);
        Electronics testE = new Electronics();
        testE.setProductID(100100);
        testE.setDesc("Java Programming");
        testE.setPrice(10.5f);
        testE.setYear("2020");
        testE.setMaker("Lakhiani");
        p = eStoreSearch.addProduct(p, testE);
        boolean retVal = eStoreSearch.compareID(p, id);
        assertTrue(retVal);
      } catch (Exception e) {
        System.out.println(e.getMessage());
      }
    }
    
    @Test public void testEmptyString() {
      EStoreSearch eStoreSearch = new EStoreSearch();
      String empty = "";
      boolean retVal = eStoreSearch.emptyString(empty);
      assertTrue(retVal);
    }
    
    @Test public void testIsOfLength() {
      EStoreSearch eStoreSearch = new EStoreSearch();
      String word = "word";
      boolean retVal = eStoreSearch.isOfLength(4, word);
      assertTrue(retVal);
    }
    
    @Test public void testHyphenAtEnd() {
      EStoreSearch eStoreSearch = new EStoreSearch();
      String years = "2002-";
      boolean retVal = eStoreSearch.hyphenAtEnd(years);
      assertTrue(retVal);
    }
    
    @Test public void testPrintAllItems() {
      try {
        EStoreSearch eStoreSearch = new EStoreSearch();
        ArrayList<Product> p = new ArrayList<Product>();
        Book testBook = new Book();
        testBook.setProductID(100100);
        testBook.setDesc("Java Programming");
        testBook.setPrice(10.5f);
        testBook.setYear("2020");
        testBook.setAuthors("Dhruv");
        testBook.setPublisher("Lakhiani");
        p.add(testBook);
        Electronics testE = new Electronics();
        testE.setProductID(100100);
        testE.setDesc("Java Programming");
        testE.setPrice(10.5f);
        testE.setYear("2020");
        testE.setMaker("Lakhiani");
        p.add(testE);
        assertEquals(1, eStoreSearch.printAllItems(p));
      } catch (Exception e) {
        System.out.println(e.getMessage());
      }
    }
    
    @Test public void testSearchID() {
      try {
        EStoreSearch eStoreSearch = new EStoreSearch();
        int id = 100100;
        ArrayList<Product> p = new ArrayList<Product>();
        Book testBook = new Book();
        testBook.setProductID(100100);
        testBook.setDesc("Java Programming");
        testBook.setPrice(10.5f);
        testBook.setYear("2020");
        testBook.setAuthors("Dhruv");
        testBook.setPublisher("Lakhiani");
        p.add(testBook);
        Electronics testE = new Electronics();
        testE.setProductID(100100);
        testE.setDesc("Java Programming");
        testE.setPrice(10.5f);
        testE.setYear("2020");
        testE.setMaker("Lakhiani");
        p.add(testE);
        assertEquals(1, eStoreSearch.searchID(p, id));
      } catch (Exception e) {
        System.out.println(e.getMessage());
      }
    }
    
    @Test public void testSearchDesc() {
      try {
        EStoreSearch eStoreSearch = new EStoreSearch();
        String desc = "Java Programming";
        ArrayList<Product> p = new ArrayList<Product>();
        Book testBook = new Book();
        testBook.setProductID(100100);
        testBook.setDesc("Java Programming");
        testBook.setPrice(10.5f);
        testBook.setYear("2020");
        testBook.setAuthors("Dhruv");
        testBook.setPublisher("Lakhiani");
        p.add(testBook);
        Electronics testE = new Electronics();
        testE.setProductID(100100);
        testE.setDesc("Java Programming");
        testE.setPrice(10.5f);
        testE.setYear("2020");
        testE.setMaker("Lakhiani");
        p.add(testE);
        HashMap<String, ArrayList<Integer>> hashDesc = eStoreSearch.createHashDesc(p);
        assertEquals(1, eStoreSearch.searchDesc(p, desc, hashDesc));
      } catch (Exception e) {
        System.out.println(e.getMessage());
      }
    }
    
    @Test public void testSearchTime() {
      try {
        EStoreSearch eStoreSearch = new EStoreSearch();
        int start = 1000, end = 4000;
        ArrayList<Product> p = new ArrayList<Product>();
        Book testBook = new Book();
        testBook.setProductID(100100);
        testBook.setDesc("Java Programming");
        testBook.setPrice(10.5f);
        testBook.setYear("2020");
        testBook.setAuthors("Dhruv");
        testBook.setPublisher("Lakhiani");
        p.add(testBook);
        Electronics testE = new Electronics();
        testE.setProductID(100100);
        testE.setDesc("Java Programming");
        testE.setPrice(10.5f);
        testE.setYear("2020");
        testE.setMaker("Lakhiani");
        p.add(testE);
        assertEquals(1, eStoreSearch.searchTime(p, start, end));
      } catch (Exception e) {
        System.out.println(e.getMessage());
      }
    }
    
    @Test public void testSearchDescAndTime() {
      try {
        EStoreSearch eStoreSearch = new EStoreSearch();
        String desc = "Java Programming";
        int start = 1000, end = 4000;
        ArrayList<Product> p = new ArrayList<Product>();
        Book testBook = new Book();
        testBook.setProductID(100100);
        testBook.setDesc("Java Programming");
        testBook.setPrice(10.5f);
        testBook.setYear("2020");
        testBook.setAuthors("Dhruv");
        testBook.setPublisher("Lakhiani");
        p.add(testBook);
        Electronics testE = new Electronics();
        testE.setProductID(100100);
        testE.setDesc("Java Programming");
        testE.setPrice(10.5f);
        testE.setYear("2020");
        testE.setMaker("Lakhiani");
        p.add(testE);
        HashMap<String, ArrayList<Integer>> hashDesc = eStoreSearch.createHashDesc(p);
        assertEquals(1, eStoreSearch.searchDescAndTime(p, desc, start, end, hashDesc));
      } catch (Exception e) {
        System.out.println(e.getMessage());
      }
    }
    
    @Test public void testSearchIDAndTime() {
      try {
        EStoreSearch eStoreSearch = new EStoreSearch();
        int id = 100100;
        int start = 1000, end = 4000;
        ArrayList<Product> p = new ArrayList<Product>();
        Book testBook = new Book();
        testBook.setProductID(100100);
        testBook.setDesc("Java Programming");
        testBook.setPrice(10.5f);
        testBook.setYear("2020");
        testBook.setAuthors("Dhruv");
        testBook.setPublisher("Lakhiani");
        p.add(testBook);
        Electronics testE = new Electronics();
        testE.setProductID(100100);
        testE.setDesc("Java Programming");
        testE.setPrice(10.5f);
        testE.setYear("2020");
        testE.setMaker("Lakhiani");
        p.add(testE);
        assertEquals(1, eStoreSearch.searchIDAndTime(p, id, start, end));
      } catch (Exception e) {
        System.out.println(e.getMessage());
      }
    }
    
    @Test public void testSearchIDAndDesc() {
      try {
        EStoreSearch eStoreSearch = new EStoreSearch();
        int id = 100100;
        String desc = "Java Programming";
        ArrayList<Product> p = new ArrayList<Product>();
        Book testBook = new Book();
        testBook.setProductID(100100);
        testBook.setDesc("Java Programming");
        testBook.setPrice(10.5f);
        testBook.setYear("2020");
        testBook.setAuthors("Dhruv");
        testBook.setPublisher("Lakhiani");
        p.add(testBook);
        Electronics testE = new Electronics();
        testE.setProductID(100100);
        testE.setDesc("Java Programming");
        testE.setPrice(10.5f);
        testE.setYear("2020");
        testE.setMaker("Lakhiani");
        p.add(testE);
        HashMap<String, ArrayList<Integer>> hashDesc = eStoreSearch.createHashDesc(p);
        assertEquals(1, eStoreSearch.searchIDAndDesc(p, id, desc, hashDesc));
      } catch (Exception e) {
        System.out.println(e.getMessage());
      }
    }
    
    @Test public void testSearchSpecific() {
      try {
        EStoreSearch eStoreSearch = new EStoreSearch();
        int id = 100100;
        String desc = "Java Programming";
        int start = 1000, end = 4000;
        ArrayList<Product> p = new ArrayList<Product>();
        Book testBook = new Book();
        testBook.setProductID(100100);
        testBook.setDesc("Java Programming");
        testBook.setPrice(10.5f);
        testBook.setYear("2020");
        testBook.setAuthors("Dhruv");
        testBook.setPublisher("Lakhiani");
        p.add(testBook);
        Electronics testE = new Electronics();
        testE.setProductID(100100);
        testE.setDesc("Java Programming");
        testE.setPrice(10.5f);
        testE.setYear("2020");
        testE.setMaker("Lakhiani");
        p.add(testE);
        HashMap<String, ArrayList<Integer>> hashDesc = eStoreSearch.createHashDesc(p);
        assertEquals(1, eStoreSearch.searchSpecific( p, id, desc, start, end, hashDesc));
      } catch (Exception e) {
        System.out.println(e.getMessage());
      }
    }
    
    @Test public void testFileRead() {
      EStoreSearch eStoreSearch = new EStoreSearch();
      ArrayList<Product> p = new ArrayList<Product>();
      String file = "storeInput.txt";
      p = eStoreSearch.fileRead(file);
      assertTrue(0 < p.size());
    }

    @Test public void testPrintIntoFile() {
      EStoreSearch eStoreSearch = new EStoreSearch();
      ArrayList<Product> p = new ArrayList<Product>();
      String file = "storeInput.txt";
      p = eStoreSearch.fileRead(file);
      assertEquals(1, eStoreSearch.printIntoFile(p, "outputTest.txt"));
    }

    @Test public void testCreateHashDesc() {
      EStoreSearch eStoreSearch = new EStoreSearch();
      ArrayList<Product> p = new ArrayList<Product>();
      String file = "storeInput.txt";
      p = eStoreSearch.fileRead(file);
      HashMap<String, ArrayList<Integer>> hashDesc = eStoreSearch.createHashDesc(p);
      assertNotNull(hashDesc);
    }
}
